class Solution {
private:
    int helper(int n, long prefix1, long prefix2){
        int steps = 0;
        while(prefix1 <= n){
            steps += min((long) n + 1, prefix2) - prefix1;
            prefix1 *= 10;
            prefix2 *= 10;
        }
        return steps;
    }
public:
    int findKthNumber(int n, int k) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);
       
        int curr = 1;
        k--;
        while(k > 0){
            int steps = helper(n, curr, curr + 1);
            if(steps <= k){
                curr++;
                k -= steps;
            }
            else{
                curr *= 10;
                k--;
            }
        }

        return curr;

    }
};