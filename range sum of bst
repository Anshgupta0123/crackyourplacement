/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        vector<int> a;
        preorder(root, low, high, a);
        int sum = 0;
        for (int i = 0; i < a.size(); i++) {
            sum += a[i];
        }
        return sum;
    }

    void preorder(TreeNode* head, int low, int high, vector<int>& a) {
        if (head) {
            if (head->val != NULL && head->val <= high && head->val >= low) {
                a.push_back(head->val);
            }
            preorder(head->left, low, high, a);
            preorder(head->right, low, high, a);
        }
    }
};
